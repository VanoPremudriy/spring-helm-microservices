version: '3'
services:
  redis:
    container_name: redis
    hostname: redis
    image: redis
    ports:
      - "6379:6379"

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: ghcr.io/joeferner/redis-commander:latest
    restart: always
    environment:
    - REDIS_HOSTS=local:redis:6379
    ports:
    - "8081:8081"
  
  auth-db:
    container_name: auth-db
    image: postgres:latest
    environment:
      POSTGRES_ROOT_PASSWORD: root
      POSTGRES_USER: user
      POSTGRES_PASSWORD: root
      POSTGRES_DB: auth_db
    ports:
      - "4444:5432"
    volumes:
      - "./AuthorizationService/db.sql:/docker-entrypoint-initdb.d/db.sql"
    
  library-db:
    container_name: library-db
    image: postgres:latest
    environment:
      POSTGRES_ROOT_PASSWORD: root
      POSTGRES_USER: user
      POSTGRES_PASSWORD: root
      POSTGRES_DB: library_db
    ports:
      - "3333:5432"
    volumes:
      - "./LibraryService/db.sql:/docker-entrypoint-initdb.d/db.sql"
  
  zoo1:
    container_name: zoo1
    image: zookeeper:3.4.9
    hostname: zoo1
    ports:
      - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zoo1:2888:3888
    volumes:
      - ./AuthorizationService/zk-single-kafka-single/zoo1/data:/data
      - ./AuthorizationService/zk-single-kafka-single/zoo1/datalog:/datalog

  kafka1:
    container_name: kafka1
    image: confluentinc/cp-kafka:5.3.1
    hostname: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://kafka1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: 'library-topic'
    depends_on:
      - zoo1
    volumes:
      - ./AuthorizationService/zk-single-kafka-single/kafka1/data:/var/lib/kafka/data

  authorization:
    container_name: authorization
    build:
        context: AuthorizationService
        dockerfile: Dockerfile
    image: authorization
    hostname: authorization
    ports:
      - "8080:8080"
    depends_on:
      - zoo1
      - kafka1
      - auth-db
      - redis

  library:
    container_name: library
    build:
        context: LibraryService
        dockerfile: Dockerfile
    image: library
    hostname: library
    ports:
      - "8082:8082"
    depends_on:
      - zoo1
      - kafka1
      - library-db
      - redis
  
  krakend_gateway:
    container_name: krakend_gateway
    image: devopsfaith/krakend:2.1.3
    volumes:
      - ./krakend.json:/krakend.json
    ports:
      - "1234:1234"
      - "8083:8083"
      - "8090:8090"

    command: [ "run", "-d", "-c", "/krakend.json" ]
